{"meta":{"title":"Citingnutria's Blog","subtitle":"","description":"","author":"citing","url":"http://example.com","root":"/"},"pages":[{"title":"links","date":"2021-02-22T07:51:52.000Z","updated":"2021-02-22T07:51:52.035Z","comments":true,"path":"links/index.html","permalink":"http://example.com/links/index.html","excerpt":"","text":""},{"title":"about","date":"2021-02-20T01:43:28.000Z","updated":"2021-02-20T03:11:28.504Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"某不知名医学院计算机科学在读，病危拖延症患者。 喜欢玩Minecraft和看动漫,曾经在毛线服务器花费了一整年，也认识了很多有趣的新朋友，也或多或少改变了我对自己人生的一些看法。 现在在学日本語，希望可以早日考N2。"}],"posts":[{"title":"shell学习笔记","slug":"shell学习笔记","date":"2021-02-25T05:41:24.000Z","updated":"2021-02-25T06:08:37.015Z","comments":true,"path":"2021/02/25/shell学习笔记/","link":"","permalink":"http://example.com/2021/02/25/shell%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","excerpt":"","text":"在Windows中路径使用反斜杠[],在Linux和macOS中使用[/]正斜杠。 路径分为绝对路径(abslute path)和相对路径(relative path)。 显示当前路径 pwd 意为显示当前路径 meaning “print working directory”. cd 意为改变当前目录 meaning “change direcotry”. 使用绝对路径时，cd ./xxx/xxx 使用相对路径时，cd /xxx/xxx cd ~意为前往默认目录(？). cd -在两个目录之间切换. ls -l显示目录文件的详细权限信息。","categories":[],"tags":[]},{"title":"软路由折腾记","slug":"软路由折腾记","date":"2021-02-20T22:55:18.000Z","updated":"2021-02-20T23:44:48.223Z","comments":true,"path":"2021/02/21/软路由折腾记/","link":"","permalink":"http://example.com/2021/02/21/%E8%BD%AF%E8%B7%AF%E7%94%B1%E6%8A%98%E8%85%BE%E8%AE%B0/","excerpt":"","text":"\b从前总是听说过软路由，但是也一直没有去详细了解这么个东西，去年秋季开学机缘巧合下通过一个新同学认识了软路由这么个东西。 软路由的功能不少，但是对我来说最重要的莫过于全局魔法上网了，在此之前我所有的设备都是通过客户端上网的。客户端翻墙有这么几个弊端。 有部分设备没发装翻墙客户端或者非常之麻烦，比如电视盒子。 客户端的代理层级不够高，导致不支持sock5的应用没法利用梯子，比如npm安装包的时候，找国内的镜像源又是一件麻烦事，又或者大部分游戏，玩Minecraft连接不上Mojang的验证服务器也是常有的事。 节约客户端用于解码加密数据的算力，虽然个人并没有明显的感受到这一点的影响，但是对于一些算力比较弱的设备可能比较重要。 在学校里因为要对校园网进行桥接来让我所有的设备能够联网，而不是每个设备每次都要单独登录，更何况还有设备数量限制。一开始是闲鱼买的一台伊拉克成色的小米路由器mini，只要30块钱，让大佬同学帮我刷了老毛子固件，用了一阵子，至少在本职工作——桥接校园网这件事上做的还是不错的。 咕","categories":[],"tags":[]},{"title":"Hexo + Github page笔记","slug":"第三次折腾Blog","date":"2021-02-19T22:00:00.000Z","updated":"2021-02-20T02:38:44.104Z","comments":true,"path":"2021/02/20/第三次折腾Blog/","link":"","permalink":"http://example.com/2021/02/20/%E7%AC%AC%E4%B8%89%E6%AC%A1%E6%8A%98%E8%85%BEBlog/","excerpt":"","text":"其实这是第三次折腾Blog了，这次使用的是Github page + Hexo的组合，只要求能跑起来就好(捂脸)。 这里记录一下安装的步骤好了，主要目的是防止自己之后又忘记，环境是MacOS Catalina 10.15.7。 环境检查首先检查一下需要的Node和Git,如果正常显示版本就没有问题啦。 git version node -v 安装Hexo执行如下命令安装hexo。然后要输入一下密码，似乎MacOS上所有npm命令都需要sudo。 ps:我是在路由器可以全局访问国际互联网的环境下，如果访问困难可能需要使用大陆境内的镜像。 sudo npm install -g hexo-cli 在想要存放博客内容的地方创建一个hexo的根目录，这里取名myBlog,实际想怎么取都行。 hexo init myBlog cd指令进入刚刚创建的myBlog文件夹，之后几乎所有的操作都要在这个目录下进行，在其他目录可能会出问题。 cd myBlog 安装Hexo相关组建 npm install 尝试在本地运行执行hexo s 如果没有问题现在应该可以通过浏览器 http://localhost:4000/ 访问初始demo页面了。 WIP","categories":[],"tags":[]},{"title":"光盘备份计划","slug":"光盘备份计划","date":"2020-07-20T02:34:51.000Z","updated":"2021-02-20T02:38:47.231Z","comments":true,"path":"2020/07/20/光盘备份计划/","link":"","permalink":"http://example.com/2020/07/20/%E5%85%89%E7%9B%98%E5%A4%87%E4%BB%BD%E8%AE%A1%E5%88%92/","excerpt":"","text":"前言在数月之前，SSD发生了一次毁灭性的故障，导致了许多曾在Minecraft服务器（毛线）里的截图丢失，这些截图的丢人令我感到非常难受，毕竟算是曾经几乎一整年的回忆（当时什么都没有干完全沉迷毛线）。仔细回想这也不是第一次因为电脑或者手机丢失/故障而失去一些重要数据了，于是打算折腾一个数据冷备份的计划。Google了一下主流存储介质的寿命，看起来光盘的寿命似乎有10年左右，不过网上也很多人说自己在家用刻录机刻录的光盘的寿命要比批量压制的光盘短很多，不过个人当然不可能去压制光盘，当年父母结婚时候的刻录盘似乎现在也可以读取，感觉光盘的可靠性似乎不错。如果打算光盘备份的话，预算充足蓝光盘无疑是最好的选择，每片25G的廉价蓝光盘大概2元左右，但是蓝光刻录机的价格成功阻止了我，几乎全都在500+。考虑到现在需要备份的资料不是特别多，准备用单盘4.7G的DVD盘备份，因为还在上学，对便携性有一点点要求，于是咸鱼收了一台苹果的SuperDrive，事实上如果不要求便携性，一台二手的DVD刻录光驱+SATA转USB线，大概只要40r不到就能拿下。 咕","categories":[],"tags":[]}],"categories":[],"tags":[]}