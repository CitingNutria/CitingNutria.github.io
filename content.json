{"meta":{"title":"Citingnutria's Blog","subtitle":"","description":"","author":"citing","url":"http://example.com","root":"/"},"pages":[{"title":"about","date":"2021-02-20T01:43:28.000Z","updated":"2021-05-02T03:44:07.765Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"某不知名医学院计算机科学在读，病危拖延症患者。 喜欢玩Minecraft和看动漫,曾经在毛线服务器花费了一整年，也认识了很多有趣的新朋友，也或多或少改变了我对自己人生的一些看法。 偶尔写点没人看的东西。现在在学日本語，希望可以早日考N2。 添加友连或者别的什么可以私戳Telegram：https://t.me/citingnutria"},{"title":"links","date":"2021-02-22T07:51:52.000Z","updated":"2021-02-22T07:51:52.000Z","comments":true,"path":"links/index.html","permalink":"http://example.com/links/index.html","excerpt":"","text":""}],"posts":[{"title":"使用py2app在MacOS上打包Python代码","slug":"使用py2app在MacOS上打包Python代码","date":"2021-09-20T10:38:36.000Z","updated":"2021-10-14T20:41:28.275Z","comments":true,"path":"2021/09/20/使用py2app在MacOS上打包Python代码/","link":"","permalink":"http://example.com/2021/09/20/%E4%BD%BF%E7%94%A8py2app%E5%9C%A8MacOS%E4%B8%8A%E6%89%93%E5%8C%85Python%E4%BB%A3%E7%A0%81/","excerpt":"","text":"下面的命令和代码基于 Python3 py2app 可以将 python 脚本文件转换为 macOS 可以直接运行的应用程序，下面是简单的步骤。 安装 py2app在终端中输入 1pip3 install -U py2app 生成 setup.py 配置文件假设我们有了一个 py 文件，文件名是 main.py 。 首先需要生成一个 setup.py 文件。在终端中输入下面的指令，其中的 main.py 需要根据自己要生成的 .py 文件的不同去修改。 1py2applet --make-setup main.py 添加需要用到的外部文件如果 py 文件里需要用到外部文件，那么需要在 setup.py 里面添加这些文件的路径。 12345678910111213from setuptools import setupAPP = [&#x27;main.py&#x27;]# 添加文件路径DATA_FILES = [&#x27;a.txt&#x27;,&#x27;b.jpg&#x27;]OPTIONS = &#123;&#125;setup( app=APP, data_files=DATA_FILES, options=&#123;&#x27;py2app&#x27;: OPTIONS&#125;, setup_requires=[&#x27;py2app&#x27;],) 更改图标（可选）默认生成的应用程序的图标是一样的，如果想要更换图标，需要先准备好一个图标的图片，py2app 接受 icns 格式的图标文件，icns 是苹果图标文件格式，可以在 https://cloudconvert.com/ 将其他格式的图片转换成 icns 格式。 这里的图标文件是icon.icns将转换完成的图标文件放入和 py 文件同一个目录下，打开setup.py编辑，在 OPTIONS 里如下编辑。 1234567891011121314from setuptools import setupAPP = [&#x27;main.py&#x27;]# 添加文件路径DATA_FILES = [&#x27;a.txt&#x27;,&#x27;b.jpg&#x27;]# 添加需要修改的图标文件OPTIONS = &#123;&#x27;iconfile&#x27;:&#x27;icon.icns&#x27;,&#125;setup( app=APP, data_files=DATA_FILES, options=&#123;&#x27;py2app&#x27;: OPTIONS&#125;, setup_requires=[&#x27;py2app&#x27;],) 生成应用程序文件然后再输入 1python3 setup.py py2app -A 这里的-A一定是大写，不可以是小写的-a。 此时目录里应该会多出两个文件夹，一个 build 文件夹，一个 dist 文件夹，而我们需要的应用程序就在 dist 文件夹里面。","categories":[],"tags":[]},{"title":"用Python写一个健康打卡脚本","slug":"用Python写一个健康打卡脚本","date":"2021-09-10T03:05:51.000Z","updated":"2021-09-10T03:07:12.275Z","comments":true,"path":"2021/09/10/用Python写一个健康打卡脚本/","link":"","permalink":"http://example.com/2021/09/10/%E7%94%A8Python%E5%86%99%E4%B8%80%E4%B8%AA%E5%81%A5%E5%BA%B7%E6%89%93%E5%8D%A1%E8%84%9A%E6%9C%AC/","excerpt":"","text":"因为南京疫情的复发，学校要求开学之前一直每日打卡，过程就是每天反复填写一个类似调查问卷的网页提交，每次的内容几乎一模一样，天天重复一样的工作属实很蠢，准备用python写一个脚本，自动登录提交，再放到GitHub Action上每日自动执行，这样以来就再也不用管了。 登陆部分提交申请之前要先登陆学校的账号，于是先打卡登陆界面，用Chrome自带的调试工具抓取一下登陆信息。 在Form Data里找到提交的参数 username是学号，password是密码，主要是这两个，下面的四个直接照搬即可。 username: xxxxxpassword: xxxxxexecution: 5d0b6fd7…. （此处省略，太长了）_eventId: submitloginType: 1submit: 登 录 设置一下参数： 12345678 &quot;username&quot;: userid, &quot;password&quot;: password, &quot;execution&quot;: &quot;a9399fcxWkE&#x3D;&quot;,（此处省略，太长了） &quot;_eventId&quot;: &quot;submit&quot;, &quot;loginType&quot;: &quot;1&quot;, &quot;submit&quot;: &quot;登 录&quot;&#125; 找到要post的url，用requests.post，并且把上面的postData作为数据参数提交。 12post_url &#x3D; &#39;https:&#x2F;&#x2F;ids.njucm.edu.cn&#x2F;login?service&#x3D;https:&#x2F;&#x2F;pdc.njucm.edu.cn&#x2F;pdc&#x2F;formDesignApi&#x2F;S&#x2F;iKKUJvEV&#39;post &#x3D; requests.post(post_url, data&#x3D;postData) 提交部分提交之后怎么确认是不是登陆成功进到表格页面呢，在表格页面下面有个提交按钮，在返回的post.txt查找一下。 if post.text.find(&#39;提交&#39;): print(&quot;登陆确认&quot;) 事先提交一次表单，和刚才抓取登陆表单一样，抓取一下提交表单。 将参数设置一下 1234567891011121314151617181920params &#x3D; &#123; &#39;DATETIME_CYCLE&#39;: &#39;&#39;, &#39;DLM_455532&#39;: &#39;&#39;, &#39;XM_699791&#39;: &#39;&#39;, &#39;RADIO_816586&#39;: &#39;境内&#39;, &#39;PICKER_894219&#39;: &#39;&#39;, &#39;TEXT_362765&#39;: &#39;&#39;, &#39;RADIO_773105&#39;: &#39;健康&#39;, &#39;RADIO_252419&#39;: &#39;否&#39;, &#39;SELECT_502461&#39;: &#39;&#39;, &#39;SELECT_96317&#39;: &#39;36.7℃及以下&#39;, &#39;RADIO_223980&#39;: &#39;否&#39;, &#39;SELECT_117762&#39;: &#39;&#39;, &#39;SELECT_631415&#39;: &#39;36.8℃&#39;, &#39;RADIO_944199&#39;: &#39;否&#39;, &#39;TEXT_625091&#39;: &#39;&#39;, &#39;RADIO_655596&#39;: &#39;否&#39;, &#39;TEXTAREA_901197&#39;: &#39;无&#39;, &#39;CHECKBOX_712638&#39;: &#39;同意并承诺&#39; &#125; 将提交表单里每个人不同的地方替换下 12345params[&#39;XM_699791&#39;] &#x3D; nameparams[&#39;DLM_455532&#39;] &#x3D; useridparams[&#39;PICKER_894219&#39;] &#x3D; locationnow_time &#x3D; datetime.datetime.now().strftime(&#39;%Y&#x2F;%m&#x2F;%d&#39;)params[&#39;DATETIME_CYCLE&#39;] &#x3D; now_time 设置一下post的url url = &#39;https://pdc.njucm.edu.cn/pdc/formDesignApi/dataFormSave?wid=A25FF315167F5528E0533200140AA058&amp;userId=&#39; + userid 带上参数，post过去，如果返回200通常就算成功了。 res = requests.post(url, data=params) if res.status_code == 200: print(&#39;提交成功&#39;) 完整代码在https://github.com/CitingNutria/NJUCM-daily-health-checker","categories":[],"tags":[]},{"title":"兰科芯128G固态u盘评测","slug":"兰科芯128G固态u盘评测","date":"2021-05-02T03:16:12.000Z","updated":"2021-05-02T03:36:48.017Z","comments":true,"path":"2021/05/02/兰科芯128G固态u盘评测/","link":"","permalink":"http://example.com/2021/05/02/%E5%85%B0%E7%A7%91%E8%8A%AF128G%E5%9B%BA%E6%80%81u%E7%9B%98%E8%AF%84%E6%B5%8B/","excerpt":"","text":"之前因为一些原因把Nvme的固态硬盘盒给卖掉了，卖掉之后发觉很缺少一个高速的移动存储设备，虽然也可以拿着5t的移动硬盘但是终归还是不方便，而手头上32G的u盘速度实在令人蛋疼。 很久以前就听闻用有人用ssd方案做u盘来装win-to-go（将Windows操作系统装入u盘随身携带），去某宝看到某论坛合作商家，然而被价格劝退。 翻了两天看这个兰科芯的固态u盘还行，宣称主控是慧荣的SMI2246XT,颗粒MLC颗粒，但是没写具体型号，是不是黑片也就不知道了。最后还是下单了，价格不便宜，128G的179到手。 上海发货，经过两天的等待到手，送了一个没什么用的小保护套，以及一个A to C和一个A to MicroB的转接头。 反面印着2D MLC的宣传。 下面直接放测试结果。 CrystalDiskMark检测结果，确实是检测为SSD了，支持SMART. AS SSD Benchmark测试结果。 这个结果虽然在SSD里实在算不上优秀，但是考虑到体积和便携性，应该还是相当不错。","categories":[],"tags":[]},{"title":"MacBook Pro 2017款A1708换装1t固态硬盘","slug":"MacBook Pro 2017款A1708换装1t固态硬盘","date":"2021-04-22T12:30:20.000Z","updated":"2021-11-19T10:53:09.854Z","comments":true,"path":"2021/04/22/MacBook Pro 2017款A1708换装1t固态硬盘/","link":"","permalink":"http://example.com/2021/04/22/MacBook%20Pro%202017%E6%AC%BEA1708%E6%8D%A2%E8%A3%851t%E5%9B%BA%E6%80%81%E7%A1%AC%E7%9B%98/","excerpt":"","text":"苹果 MacBook 系列的存储容量一直被人诟病，如果是官方商店从 256G 到 1T 需要加价3000人民币！而我的2017款A1708无touch bar版本也是最后一个能更换硬盘的版本了，虽说能换，但是这个硬盘接口是苹果的私有接口，淘宝的拆机硬盘也颇为昂贵。直到在2020在淘宝上出现了能转接硬盘到A1708的转接版，但是因为没有什么参考，加上256G勉强够用，迟迟没有去更换。这个转接版原生只支持2242和2230尺寸的Nvme硬盘，实际上可供选择的余地并不多。 关于ssd的选择，稍微参考了这个视频：https://www.youtube.com/watch?v=SbAN-REhb1Y&amp;t=503s&amp;ab_channel=%E6%95%B0%E7%A0%81%E5%90%9B 最终，花了23元购买转接版，而ssd选择了1T容量的西数SN530，大概就是SN550的OEM版本，硬盘参数可以在西数官网找到：https://www.westerndigital.com/products/commercial-internal-drives/pc-sn530-ssd 因为之前更换鼓包的电池拆过一次，所以拆开后盖倒是轻车熟路，首先是断开电池连接，由一个扁扁的螺丝固定，拧开螺丝将连接端子挑起，把原装的256G固态拆下，将ssd装到转接卡上之后装入插槽。 拆开后盖的样子。 电池连接处 SSD特写 更换下来的原装SSD 重点！ macOS恢复工具如果版本低于Mojave那么磁盘工具就完全没有办法识别nvme的硬盘，必须事先将大于等于10.14的磁盘引导程序写入U盘进行引导。我在这里来来回回尝试了无数次才发觉这个问题，关于引导U盘制作参考：https://support.apple.com/zh-cn/HT201372 。开机后按住option键选择引导U盘，之后应该就可以在磁盘工具中看到被识别的新硬盘，之后便是按照常规流程安装系统或者从Time Machine中恢复，我花了大概4个多小时从Time Machine的外置机械盘里恢复系统。 放一张SN530的跑分，写入比苹果原装的要快大概一倍，而读取速度相差不大 更换后在磁盘工具中显示。 在恢复完系统之后有一次开机出现无法找到硬盘的情况，也不知道是不是偶然，希望可以稳定用下去。 ps.为了折腾这玩意几乎翘了一天的课（","categories":[],"tags":[]},{"title":"shell学习笔记","slug":"shell学习笔记","date":"2021-02-25T05:41:24.000Z","updated":"2021-02-25T06:08:37.000Z","comments":true,"path":"2021/02/25/shell学习笔记/","link":"","permalink":"http://example.com/2021/02/25/shell%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","excerpt":"","text":"在Windows中路径使用反斜杠[],在Linux和macOS中使用[/]正斜杠。 路径分为绝对路径(abslute path)和相对路径(relative path)。 显示当前路径 pwd 意为显示当前路径 meaning “print working directory”. cd 意为改变当前目录 meaning “change direcotry”. 使用绝对路径时，cd ./xxx/xxx 使用相对路径时，cd /xxx/xxx cd ~意为前往默认目录(？). cd -在两个目录之间切换. ls -l显示目录文件的详细权限信息。","categories":[],"tags":[]},{"title":"软路由折腾记","slug":"软路由折腾记","date":"2021-02-20T22:55:18.000Z","updated":"2021-02-20T23:44:48.000Z","comments":true,"path":"2021/02/21/软路由折腾记/","link":"","permalink":"http://example.com/2021/02/21/%E8%BD%AF%E8%B7%AF%E7%94%B1%E6%8A%98%E8%85%BE%E8%AE%B0/","excerpt":"","text":"\b从前总是听说过软路由，但是也一直没有去详细了解这么个东西，去年秋季开学机缘巧合下通过一个新同学认识了软路由这么个东西。 软路由的功能不少，但是对我来说最重要的莫过于全局魔法上网了，在此之前我所有的设备都是通过客户端上网的。客户端翻墙有这么几个弊端。 有部分设备没发装翻墙客户端或者非常之麻烦，比如电视盒子。 客户端的代理层级不够高，导致不支持sock5的应用没法利用梯子，比如npm安装包的时候，找国内的镜像源又是一件麻烦事，又或者大部分游戏，玩Minecraft连接不上Mojang的验证服务器也是常有的事。 节约客户端用于解码加密数据的算力，虽然个人并没有明显的感受到这一点的影响，但是对于一些算力比较弱的设备可能比较重要。 在学校里因为要对校园网进行桥接来让我所有的设备能够联网，而不是每个设备每次都要单独登录，更何况还有设备数量限制。一开始是闲鱼买的一台伊拉克成色的小米路由器mini，只要30块钱，让大佬同学帮我刷了老毛子固件，用了一阵子，至少在本职工作——桥接校园网这件事上做的还是不错的。 咕","categories":[],"tags":[]},{"title":"Hexo + Github page笔记","slug":"第三次折腾Blog","date":"2021-02-19T22:00:00.000Z","updated":"2021-05-18T10:03:16.824Z","comments":true,"path":"2021/02/20/第三次折腾Blog/","link":"","permalink":"http://example.com/2021/02/20/%E7%AC%AC%E4%B8%89%E6%AC%A1%E6%8A%98%E8%85%BEBlog/","excerpt":"","text":"其实这是第三次折腾Blog了，这次使用的是Github page + Hexo的组合，只要求能跑起来就好(捂脸)。 这里记录一下安装的步骤好了，主要目的是防止自己之后又忘记，环境是MacOS Catalina 10.15.7。 环境检查首先检查一下需要的Node和Git,如果正常显示版本就没有问题啦。 git version node -v 安装Hexo执行如下命令安装hexo。然后要输入一下密码，似乎MacOS上所有npm命令都需要sudo。 ps:我是在路由器可以全局访问国际互联网的环境下，如果访问困难可能需要使用大陆境内的镜像。 sudo npm install -g hexo-cli 在想要存放博客内容的地方创建一个hexo的根目录，这里取名myBlog,实际想怎么取都行。 hexo init myBlog cd指令进入刚刚创建的myBlog文件夹，之后几乎所有的操作都要在这个目录下进行，在其他目录可能会出问题。 cd myBlog 安装Hexo相关组建 npm install 尝试在本地运行执行hexo s 如果没有问题现在应该可以通过浏览器 http://localhost:4000/ 访问初始demo页面了。 一些常用的指令 创建新的文章$ hexo new [layout] &lt;title&gt; 完成部署$ hexo d -g 清除缓存$ hexo clean WIP","categories":[],"tags":[]},{"title":"光盘备份计划","slug":"光盘备份计划","date":"2020-07-20T02:34:51.000Z","updated":"2021-02-20T02:38:47.000Z","comments":true,"path":"2020/07/20/光盘备份计划/","link":"","permalink":"http://example.com/2020/07/20/%E5%85%89%E7%9B%98%E5%A4%87%E4%BB%BD%E8%AE%A1%E5%88%92/","excerpt":"","text":"前言在数月之前，SSD发生了一次毁灭性的故障，导致了许多曾在Minecraft服务器（毛线）里的截图丢失，这些截图的丢人令我感到非常难受，毕竟算是曾经几乎一整年的回忆（当时什么都没有干完全沉迷毛线）。仔细回想这也不是第一次因为电脑或者手机丢失/故障而失去一些重要数据了，于是打算折腾一个数据冷备份的计划。Google了一下主流存储介质的寿命，看起来光盘的寿命似乎有10年左右，不过网上也很多人说自己在家用刻录机刻录的光盘的寿命要比批量压制的光盘短很多，不过个人当然不可能去压制光盘，当年父母结婚时候的刻录盘似乎现在也可以读取，感觉光盘的可靠性似乎不错。如果打算光盘备份的话，预算充足蓝光盘无疑是最好的选择，每片25G的廉价蓝光盘大概2元左右，但是蓝光刻录机的价格成功阻止了我，几乎全都在500+。考虑到现在需要备份的资料不是特别多，准备用单盘4.7G的DVD盘备份，因为还在上学，对便携性有一点点要求，于是咸鱼收了一台苹果的SuperDrive，事实上如果不要求便携性，一台二手的DVD刻录光驱+SATA转USB线，大概只要40r不到就能拿下。 咕","categories":[],"tags":[]}],"categories":[],"tags":[]}