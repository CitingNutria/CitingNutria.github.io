<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Citingnutria&#39;s Blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-01-30T11:13:13.280Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>citing</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>用Python来玩Wordle</title>
    <link href="http://example.com/2022/01/30/%E7%94%A8Python%E6%9D%A5%E7%8E%A9Wordle/"/>
    <id>http://example.com/2022/01/30/%E7%94%A8Python%E6%9D%A5%E7%8E%A9Wordle/</id>
    <published>2022-01-30T11:12:34.000Z</published>
    <updated>2022-01-30T11:13:13.280Z</updated>
    
    <content type="html"><![CDATA[<p>最近在 Twitter 上看到很多人在发一种几个绿黄灰色 emoji 组成的推文，感觉像是 Github 的图但是有不太对，一查发现原来是一种叫 wordle 文字解密游戏，而推文就是每日题目的成绩。</p><p><img src="https://raw.githubusercontent.com/CitingNutria/image_hosting/master/20220130/wordle_twitter.6tkluev3zdog.webp" alt="wordle_twitter"></p><p>游戏的规则很简单，就是猜5个字母长度的单词，每天有6次机会，每次猜完都会告诉你猜的结果。</p><ul><li>绿色: 这个方块的字母在正确的位置</li><li>黄色: 这个方块的字母在单词里但是位置是错误的</li><li>灰色: 单词中不包含这个方块的字母</li></ul><p>思路很简单</p><ol><li>找到所有的英文单词。</li><li>筛选出所有5个字母长度的单词。</li><li>去除所有包含灰色字母的单词</li><li>去除所有不包含黄色字母的单词。</li><li>去除所有绿色方块对应位置字母不一致的单词。</li><li>从剩余词库列表中验证</li><li>重复 3-6 过程。</li></ol><p>效果还是不错的，基本可以在5步之内解出。</p><p>完整代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> ceil</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#加载单词库</span></span><br><span class="line">word_list = []</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> <span class="built_in">open</span>(<span class="string">&#x27;engmix.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(line) == <span class="number">6</span>:</span><br><span class="line">        word_list.append(line[<span class="number">0</span>:<span class="number">5</span>].lower())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># green=1,yellow=2,gary=3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;在结果中输入5位数组&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;输入1代表绿色，输入2代表黄色，输入3代表灰色&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;Example:12331&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#主循环</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    print(<span class="string">&quot;----------------------------------------------------&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;候选单词数量：&quot;</span>, <span class="built_in">len</span>(word_list))</span><br><span class="line">    random_num = ceil(random() * <span class="built_in">len</span>(word_list)) - <span class="number">1</span></span><br><span class="line">    print(<span class="string">&quot;随机数：&quot;</span>, random_num)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(word_list) == <span class="number">0</span>:</span><br><span class="line">        print(<span class="string">&quot;没有单词了！&quot;</span>)</span><br><span class="line">        exit()</span><br><span class="line">    word = word_list[random_num]</span><br><span class="line">    print(<span class="string">&quot;输入单词：&quot;</span>, word)</span><br><span class="line">    <span class="comment"># word = &quot;jujus&quot;</span></span><br><span class="line">    check = <span class="built_in">str</span>(<span class="built_in">input</span>(<span class="string">&#x27;输入结果: &#x27;</span>))</span><br><span class="line">    <span class="keyword">if</span> check == <span class="string">&#x27;r&#x27;</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    white_list = <span class="built_in">set</span>()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> index, select <span class="keyword">in</span> <span class="built_in">enumerate</span>(check):</span><br><span class="line">        <span class="keyword">if</span> select == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            print(<span class="string">&quot;添加白名单：&quot;</span>, word[index])</span><br><span class="line">            white_list.add(word[index])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> index, select <span class="keyword">in</span> <span class="built_in">enumerate</span>(check):</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> select == <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">            gary_word = word[index]</span><br><span class="line">            <span class="comment"># print(&quot;排除字母：&quot;,gary_word)</span></span><br><span class="line">            counter = <span class="number">0</span></span><br><span class="line">            <span class="keyword">while</span> counter &lt; <span class="built_in">len</span>(word_list):</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(word_list) == counter:</span><br><span class="line">                    <span class="comment"># print(&quot;break&quot;)</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">if</span> (gary_word <span class="keyword">in</span> word_list[counter]) <span class="keyword">and</span> (gary_word <span class="keyword">not</span> <span class="keyword">in</span> white_list):</span><br><span class="line">                    <span class="comment"># print(white_list)</span></span><br><span class="line">                    print(<span class="string">&quot;排除单词：&quot;</span>,word_list[counter])</span><br><span class="line">                    word_list.remove(word_list[counter])</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    counter += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> select == <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">            yellow_word = word[index]</span><br><span class="line">            counter = <span class="number">0</span></span><br><span class="line">            <span class="keyword">while</span> counter &lt; <span class="built_in">len</span>(word_list):</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(word_list) == counter-<span class="number">1</span>:</span><br><span class="line">                    print(<span class="string">&quot;break&quot;</span>)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">if</span> (yellow_word <span class="keyword">not</span> <span class="keyword">in</span> word_list[counter]) <span class="keyword">or</span> (yellow_word == word_list[counter][index]):</span><br><span class="line">                    print(<span class="string">&quot;排除单词:&quot;</span>, word_list[counter])</span><br><span class="line">                    word_list.remove(word_list[counter])</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    counter += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> select == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            green_world = word[index]</span><br><span class="line">            counter = <span class="number">0</span></span><br><span class="line">            <span class="keyword">while</span> counter &lt; <span class="built_in">len</span>(word_list):</span><br><span class="line">                <span class="keyword">if</span> word_list[counter][index] != green_world:</span><br><span class="line">                    print(<span class="string">&quot;排除单词:&quot;</span>, word_list[counter])</span><br><span class="line">                    word_list.remove(word_list[counter])</span><br><span class="line">                    counter -= <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(word_list) == counter-<span class="number">1</span>:</span><br><span class="line">                    <span class="comment"># print(&quot;break&quot;)</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                counter += <span class="number">1</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近在 Twitter 上看到很多人在发一种几个绿黄灰色 emoji 组成的推文，感觉像是 Github 的图但是有不太对，一查发现原来是一种叫 wordle 文字解密游戏，而推文就是每日题目的成绩。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubu</summary>
      
    
    
    
    
    <category term="Code" scheme="http://example.com/tags/Code/"/>
    
  </entry>
  
  <entry>
    <title>使用py2app在MacOS上打包Python代码</title>
    <link href="http://example.com/2021/09/20/%E4%BD%BF%E7%94%A8py2app%E5%9C%A8MacOS%E4%B8%8A%E6%89%93%E5%8C%85Python%E4%BB%A3%E7%A0%81/"/>
    <id>http://example.com/2021/09/20/%E4%BD%BF%E7%94%A8py2app%E5%9C%A8MacOS%E4%B8%8A%E6%89%93%E5%8C%85Python%E4%BB%A3%E7%A0%81/</id>
    <published>2021-09-20T10:38:36.000Z</published>
    <updated>2021-10-14T20:41:28.275Z</updated>
    
    <content type="html"><![CDATA[<p>下面的命令和代码基于 Python3</p><p>py2app 可以将 python 脚本文件转换为 macOS 可以直接运行的应用程序，下面是简单的步骤。</p><h3 id="安装-py2app"><a href="#安装-py2app" class="headerlink" title="安装 py2app"></a>安装 py2app</h3><p>在终端中输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install -U py2app</span><br></pre></td></tr></table></figure><h3 id="生成-setup-py-配置文件"><a href="#生成-setup-py-配置文件" class="headerlink" title="生成 setup.py 配置文件"></a>生成 setup.py 配置文件</h3><p>假设我们有了一个 py 文件，文件名是 <code>main.py</code> 。</p><p>首先需要生成一个 <code>setup.py</code> 文件。在终端中输入下面的指令，其中的 <code>main.py</code> 需要根据自己要生成的 .py 文件的不同去修改。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">py2applet --make-setup main.py</span><br></pre></td></tr></table></figure><h3 id="添加需要用到的外部文件"><a href="#添加需要用到的外部文件" class="headerlink" title="添加需要用到的外部文件"></a>添加需要用到的外部文件</h3><p>如果 py 文件里需要用到外部文件，那么需要在 <code>setup.py</code> 里面添加这些文件的路径。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> setuptools <span class="keyword">import</span> setup</span><br><span class="line"></span><br><span class="line">APP = [<span class="string">&#x27;main.py&#x27;</span>]</span><br><span class="line"><span class="comment"># 添加文件路径</span></span><br><span class="line">DATA_FILES = [<span class="string">&#x27;a.txt&#x27;</span>,<span class="string">&#x27;b.jpg&#x27;</span>]</span><br><span class="line">OPTIONS = &#123;&#125;</span><br><span class="line"></span><br><span class="line">setup(</span><br><span class="line">    app=APP,</span><br><span class="line">    data_files=DATA_FILES,</span><br><span class="line">    options=&#123;<span class="string">&#x27;py2app&#x27;</span>: OPTIONS&#125;,</span><br><span class="line">    setup_requires=[<span class="string">&#x27;py2app&#x27;</span>],</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="更改图标（可选）"><a href="#更改图标（可选）" class="headerlink" title="更改图标（可选）"></a>更改图标（可选）</h3><p>默认生成的应用程序的图标是一样的，如果想要更换图标，需要先准备好一个图标的图片，py2app 接受 icns 格式的图标文件，icns 是苹果图标文件格式，可以在 <a class="link"   href="https://cloudconvert.com/" >https://cloudconvert.com/<i class="fas fa-external-link-alt"></i></a>  将其他格式的图片转换成 icns 格式。</p><p>这里的图标文件是<code>icon.icns</code>将转换完成的图标文件放入和 py 文件同一个目录下，打开<code>setup.py</code>编辑，在 OPTIONS 里如下编辑。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> setuptools <span class="keyword">import</span> setup</span><br><span class="line"></span><br><span class="line">APP = [<span class="string">&#x27;main.py&#x27;</span>]</span><br><span class="line"><span class="comment"># 添加文件路径</span></span><br><span class="line">DATA_FILES = [<span class="string">&#x27;a.txt&#x27;</span>,<span class="string">&#x27;b.jpg&#x27;</span>]</span><br><span class="line"><span class="comment"># 添加需要修改的图标文件</span></span><br><span class="line">OPTIONS = &#123;<span class="string">&#x27;iconfile&#x27;</span>:<span class="string">&#x27;icon.icns&#x27;</span>,&#125;</span><br><span class="line"></span><br><span class="line">setup(</span><br><span class="line">    app=APP,</span><br><span class="line">    data_files=DATA_FILES,</span><br><span class="line">    options=&#123;<span class="string">&#x27;py2app&#x27;</span>: OPTIONS&#125;,</span><br><span class="line">    setup_requires=[<span class="string">&#x27;py2app&#x27;</span>],</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="生成应用程序文件"><a href="#生成应用程序文件" class="headerlink" title="生成应用程序文件"></a>生成应用程序文件</h3><p>然后再输入</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 setup.py py2app -A</span><br></pre></td></tr></table></figure><p>这里的<code>-A</code>一定是大写，不可以是小写的<code>-a</code>。</p><p>此时目录里应该会多出两个文件夹，一个 build 文件夹，一个 dist 文件夹，而我们需要的应用程序就在 dist 文件夹里面。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;下面的命令和代码基于 Python3&lt;/p&gt;
&lt;p&gt;py2app 可以将 python 脚本文件转换为 macOS 可以直接运行的应用程序，下面是简单的步骤。&lt;/p&gt;
&lt;h3 id=&quot;安装-py2app&quot;&gt;&lt;a href=&quot;#安装-py2app&quot; class=&quot;header</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>用Python写一个健康打卡脚本</title>
    <link href="http://example.com/2021/09/10/%E7%94%A8Python%E5%86%99%E4%B8%80%E4%B8%AA%E5%81%A5%E5%BA%B7%E6%89%93%E5%8D%A1%E8%84%9A%E6%9C%AC/"/>
    <id>http://example.com/2021/09/10/%E7%94%A8Python%E5%86%99%E4%B8%80%E4%B8%AA%E5%81%A5%E5%BA%B7%E6%89%93%E5%8D%A1%E8%84%9A%E6%9C%AC/</id>
    <published>2021-09-10T03:05:51.000Z</published>
    <updated>2021-09-10T03:07:12.275Z</updated>
    
    <content type="html"><![CDATA[<p>因为南京疫情的复发，学校要求开学之前一直每日打卡，过程就是每天反复填写一个类似调查问卷的网页提交，每次的内容几乎一模一样，天天重复一样的工作属实很蠢，准备用python写一个脚本，自动登录提交，再放到GitHub Action上每日自动执行，这样以来就再也不用管了。</p><h3 id="登陆部分"><a href="#登陆部分" class="headerlink" title="登陆部分"></a>登陆部分</h3><p>提交申请之前要先登陆学校的账号，于是先打卡登陆界面，用Chrome自带的调试工具抓取一下登陆信息。</p><p>在Form Data里找到提交的参数</p><p>username是学号，password是密码，主要是这两个，下面的四个直接照搬即可。</p><blockquote><p>username: xxxxx<br>password: xxxxx<br>execution: 5d0b6fd7…. （此处省略，太长了）<br>_eventId: submit<br>loginType: 1<br>submit: 登 录</p></blockquote><p>设置一下参数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">    &quot;username&quot;: userid,</span><br><span class="line">    &quot;password&quot;: password,</span><br><span class="line">    &quot;execution&quot;: &quot;a9399fcxWkE&#x3D;&quot;,（此处省略，太长了）</span><br><span class="line">    &quot;_eventId&quot;: &quot;submit&quot;,</span><br><span class="line">    &quot;loginType&quot;: &quot;1&quot;,</span><br><span class="line">    &quot;submit&quot;: &quot;登 录&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>找到要post的url，用requests.post，并且把上面的postData作为数据参数提交。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">post_url &#x3D; &#39;https:&#x2F;&#x2F;ids.njucm.edu.cn&#x2F;login?service&#x3D;https:&#x2F;&#x2F;pdc.njucm.edu.cn&#x2F;pdc&#x2F;formDesignApi&#x2F;S&#x2F;iKKUJvEV&#39;</span><br><span class="line">post &#x3D; requests.post(post_url, data&#x3D;postData)</span><br></pre></td></tr></table></figure><h3 id="提交部分"><a href="#提交部分" class="headerlink" title="提交部分"></a>提交部分</h3><p>提交之后怎么确认是不是登陆成功进到表格页面呢，在表格页面下面有个提交按钮，在返回的post.txt查找一下。</p><pre><code>if post.text.find(&#39;提交&#39;):    print(&quot;登陆确认&quot;)</code></pre><p>事先提交一次表单，和刚才抓取登陆表单一样，抓取一下提交表单。</p><p>将参数设置一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">params &#x3D; &#123;</span><br><span class="line">        &#39;DATETIME_CYCLE&#39;: &#39;&#39;,</span><br><span class="line">        &#39;DLM_455532&#39;: &#39;&#39;,</span><br><span class="line">        &#39;XM_699791&#39;: &#39;&#39;,</span><br><span class="line">        &#39;RADIO_816586&#39;: &#39;境内&#39;,</span><br><span class="line">        &#39;PICKER_894219&#39;: &#39;&#39;,</span><br><span class="line">        &#39;TEXT_362765&#39;: &#39;&#39;,</span><br><span class="line">        &#39;RADIO_773105&#39;: &#39;健康&#39;,</span><br><span class="line">        &#39;RADIO_252419&#39;: &#39;否&#39;,</span><br><span class="line">        &#39;SELECT_502461&#39;: &#39;&#39;,</span><br><span class="line">        &#39;SELECT_96317&#39;: &#39;36.7℃及以下&#39;,</span><br><span class="line">        &#39;RADIO_223980&#39;: &#39;否&#39;,</span><br><span class="line">        &#39;SELECT_117762&#39;: &#39;&#39;,</span><br><span class="line">        &#39;SELECT_631415&#39;: &#39;36.8℃&#39;,</span><br><span class="line">        &#39;RADIO_944199&#39;: &#39;否&#39;,</span><br><span class="line">        &#39;TEXT_625091&#39;: &#39;&#39;,</span><br><span class="line">        &#39;RADIO_655596&#39;: &#39;否&#39;,</span><br><span class="line">        &#39;TEXTAREA_901197&#39;: &#39;无&#39;,</span><br><span class="line">        &#39;CHECKBOX_712638&#39;: &#39;同意并承诺&#39;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>将提交表单里每个人不同的地方替换下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">params[&#39;XM_699791&#39;] &#x3D; name</span><br><span class="line">params[&#39;DLM_455532&#39;] &#x3D; userid</span><br><span class="line">params[&#39;PICKER_894219&#39;] &#x3D; location</span><br><span class="line">now_time &#x3D; datetime.datetime.now().strftime(&#39;%Y&#x2F;%m&#x2F;%d&#39;)</span><br><span class="line">params[&#39;DATETIME_CYCLE&#39;] &#x3D; now_time</span><br></pre></td></tr></table></figure><p>设置一下post的url</p><pre><code>    url = &#39;https://pdc.njucm.edu.cn/pdc/formDesignApi/dataFormSave?wid=A25FF315167F5528E0533200140AA058&amp;userId=&#39; + userid</code></pre><p>带上参数，post过去，如果返回200通常就算成功了。</p><pre><code>    res = requests.post(url, data=params)    if res.status_code == 200:        print(&#39;提交成功&#39;)</code></pre><p>完整代码在<a class="link"   href="https://github.com/CitingNutria/NJUCM-daily-health-checker" >https://github.com/CitingNutria/NJUCM-daily-health-checker<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;因为南京疫情的复发，学校要求开学之前一直每日打卡，过程就是每天反复填写一个类似调查问卷的网页提交，每次的内容几乎一模一样，天天重复一样的工作属实很蠢，准备用python写一个脚本，自动登录提交，再放到GitHub Action上每日自动执行，这样以来就再也不用管了。&lt;/p&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>兰科芯128G固态u盘评测</title>
    <link href="http://example.com/2021/05/02/%E5%85%B0%E7%A7%91%E8%8A%AF128G%E5%9B%BA%E6%80%81u%E7%9B%98%E8%AF%84%E6%B5%8B/"/>
    <id>http://example.com/2021/05/02/%E5%85%B0%E7%A7%91%E8%8A%AF128G%E5%9B%BA%E6%80%81u%E7%9B%98%E8%AF%84%E6%B5%8B/</id>
    <published>2021-05-02T03:16:12.000Z</published>
    <updated>2021-05-02T03:36:48.017Z</updated>
    
    <content type="html"><![CDATA[<p>之前因为一些原因把Nvme的固态硬盘盒给卖掉了，卖掉之后发觉很缺少一个高速的移动存储设备，虽然也可以拿着5t的移动硬盘但是终归还是不方便，而手头上32G的u盘速度实在令人蛋疼。</p><p>很久以前就听闻用有人用ssd方案做u盘来装win-to-go（将Windows操作系统装入u盘随身携带），去某宝看到某论坛合作商家，然而被价格劝退。</p><p>翻了两天看这个兰科芯的固态u盘还行，宣称主控是慧荣的SMI2246XT,颗粒MLC颗粒，但是没写具体型号，是不是黑片也就不知道了。最后还是下单了，价格不便宜，128G的179到手。<br><img src="https://raw.githubusercontent.com/CitingNutria/image_hosting/master/20210422/lkx-price.67ce0xfjczs0.jpg" alt="lkx-price"></p><p>上海发货，经过两天的等待到手，送了一个没什么用的小保护套，以及一个A to C和一个A to MicroB的转接头。<br><img src="https://raw.githubusercontent.com/CitingNutria/image_hosting/master/20210422/lkx-all.2znk4nyzby20.JPG" alt="lkx-all"></p><p>反面印着2D MLC的宣传。<br><img src="https://raw.githubusercontent.com/CitingNutria/image_hosting/master/20210422/lkx-back.rlm6m7n781s.JPG" alt="lkx-back"><br><img src="https://raw.githubusercontent.com/CitingNutria/image_hosting/master/20210422/lkx-body.6yzrfubgx3g0.JPG" alt="lkx-body"></p><p>下面直接放测试结果。</p><p>CrystalDiskMark检测结果，确实是检测为SSD了，支持SMART.<br><img src="https://raw.githubusercontent.com/CitingNutria/image_hosting/master/20210422/lkx-cry-disk-info.4peaa4bsqsk0.PNG" alt="lkx-cry-disk-info"></p><p>AS SSD Benchmark测试结果。<br><img src="https://raw.githubusercontent.com/CitingNutria/image_hosting/master/20210422/lkx-assd-test-result2.6sjdxrzmccw0.PNG" alt="lkx-assd-test-result2"></p><p>这个结果虽然在SSD里实在算不上优秀，但是考虑到体积和便携性，应该还是相当不错。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;之前因为一些原因把Nvme的固态硬盘盒给卖掉了，卖掉之后发觉很缺少一个高速的移动存储设备，虽然也可以拿着5t的移动硬盘但是终归还是不方便，而手头上32G的u盘速度实在令人蛋疼。&lt;/p&gt;
&lt;p&gt;很久以前就听闻用有人用ssd方案做u盘来装win-to-go（将Windows操作</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>MacBook Pro 2017款A1708换装1t固态硬盘</title>
    <link href="http://example.com/2021/04/22/MacBook%20Pro%202017%E6%AC%BEA1708%E6%8D%A2%E8%A3%851t%E5%9B%BA%E6%80%81%E7%A1%AC%E7%9B%98/"/>
    <id>http://example.com/2021/04/22/MacBook%20Pro%202017%E6%AC%BEA1708%E6%8D%A2%E8%A3%851t%E5%9B%BA%E6%80%81%E7%A1%AC%E7%9B%98/</id>
    <published>2021-04-22T12:30:20.000Z</published>
    <updated>2021-11-19T12:05:40.130Z</updated>
    
    <content type="html"><![CDATA[<p>苹果 MacBook 系列的存储容量一直被人诟病，如果是官方商店从 256G 到 1T 需要加价 3000 人民币！而我的 2017 款 A1708 无 touch bar 版本也是最后一个能更换硬盘的版本了，虽说能换，但是这个硬盘接口是苹果的私有接口，淘宝的拆机硬盘也颇为昂贵。直到在 2020 在淘宝上出现了能转接硬盘到 A1708 的转接版，但是因为没有什么参考，加上256G勉强够用，迟迟没有去更换。这个转接版原生只支持 2242 和 2230 尺寸的 Nvme 硬盘，实际上可供选择的余地并不多。</p><p><img src="https://raw.githubusercontent.com/CitingNutria/image_hosting/master/1.4g4vwuoq4w00.jpg" alt="1"><br><img src="https://raw.githubusercontent.com/CitingNutria/image_hosting/master/2.6yajzu67rec0.jpg" alt="2"></p><p>关于ssd的选择，稍微参考了这个视频：<a class="link"   href="https://www.youtube.com/watch?v=SbAN-REhb1Y&amp;t=503s&amp;ab_channel=%E6%95%B0%E7%A0%81%E5%90%9B" >https://www.youtube.com/watch?v=SbAN-REhb1Y&amp;t=503s&amp;ab_channel=%E6%95%B0%E7%A0%81%E5%90%9B<i class="fas fa-external-link-alt"></i></a><br><img src="https://raw.githubusercontent.com/CitingNutria/image_hosting/master/image.56f0z3a8x840.png" alt="image"></p><p>最终，花了23元购买转接版，而ssd选择了1T容量的西数SN530，大概就是SN550的OEM版本，硬盘参数可以在西数官网找到：<a class="link"   href="https://www.westerndigital.com/products/commercial-internal-drives/pc-sn530-ssd" >https://www.westerndigital.com/products/commercial-internal-drives/pc-sn530-ssd<i class="fas fa-external-link-alt"></i></a></p><p>因为之前更换鼓包的电池拆过一次，所以拆开后盖倒是轻车熟路，首先是断开电池连接，由一个扁扁的螺丝固定，拧开螺丝将连接端子挑起，把原装的256G固态拆下，将ssd装到转接卡上之后装入插槽。</p><p>拆开后盖的样子。<br><img src="https://raw.githubusercontent.com/CitingNutria/image_hosting/master/IMG_1033.jpg" alt="IMG_1033"></p><p>电池连接处<br><img src="https://raw.githubusercontent.com/CitingNutria/image_hosting/master/IMG_1034.us14o4z67yo.jpg" alt="IMG_1034"></p><p>SSD特写<br><img src="https://raw.githubusercontent.com/CitingNutria/image_hosting/master/IMG_1035.3canr2gp2ke0.JPG" alt="IMG_1035"></p><p>更换下来的原装SSD<br><img src="https://raw.githubusercontent.com/CitingNutria/image_hosting/master/IMG_1036.iguezlb0fg0.jpg" alt="IMG_1036"></p><p>重点！</p><p>macOS恢复工具如果版本低于Mojave那么磁盘工具就完全没有办法识别nvme的硬盘，必须事先将大于等于10.14的磁盘引导程序写入U盘进行引导。我在这里来来回回尝试了无数次才发觉这个问题，关于引导U盘制作参考：<a class="link"   href="https://support.apple.com/zh-cn/HT201372" >https://support.apple.com/zh-cn/HT201372<i class="fas fa-external-link-alt"></i></a>  。开机后按住option键选择引导U盘，之后应该就可以在磁盘工具中看到被识别的新硬盘，之后便是按照常规流程安装系统或者从Time Machine中恢复，我花了大概4个多小时从Time Machine的外置机械盘里恢复系统。</p><p>放一张SN530的跑分，写入比苹果原装的要快大概一倍，而读取速度相差不大<img src="https://raw.githubusercontent.com/CitingNutria/image_hosting/master/image.6bli1gflefw0.png" alt="image"></p><p>更换后在磁盘工具中显示。<br><img src="https://raw.githubusercontent.com/CitingNutria/image_hosting/master/image.2ix969j5js60.png" alt="image"></p><p>在恢复完系统之后有一次开机出现无法找到硬盘的情况，也不知道是不是偶然，希望可以稳定用下去。</p><p>ps.为了折腾这玩意几乎翘了一天的课（</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;苹果 MacBook 系列的存储容量一直被人诟病，如果是官方商店从 256G 到 1T 需要加价 3000 人民币！而我的 2017 款 A1708 无 touch bar 版本也是最后一个能更换硬盘的版本了，虽说能换，但是这个硬盘接口是苹果的私有接口，淘宝的拆机硬盘也颇为</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>shell学习笔记</title>
    <link href="http://example.com/2021/02/25/shell%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2021/02/25/shell%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2021-02-25T05:41:24.000Z</published>
    <updated>2021-02-25T06:08:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>在Windows中路径使用反斜杠[],在Linux和macOS中使用[/]正斜杠。</p><p>路径分为绝对路径(abslute path)和相对路径(relative path)。</p><p>显示当前路径 </p><p><code>pwd</code>  意为显示当前路径 meaning “print working directory”.</p><p><code>cd</code> 意为改变当前目录 meaning “change direcotry”.</p><p>使用绝对路径时，cd ./xxx/xxx</p><p>使用相对路径时，cd  /xxx/xxx</p><p><code>cd ~</code>意为前往默认目录(？).</p><p><code>cd -</code>在两个目录之间切换.</p><p><code>ls -l</code>显示目录文件的详细权限信息。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在Windows中路径使用反斜杠[],在Linux和macOS中使用[/]正斜杠。&lt;/p&gt;
&lt;p&gt;路径分为绝对路径(abslute path)和相对路径(relative path)。&lt;/p&gt;
&lt;p&gt;显示当前路径 &lt;/p&gt;
&lt;p&gt;&lt;code&gt;pwd&lt;/code&gt;  意为显示</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>软路由折腾记</title>
    <link href="http://example.com/2021/02/21/%E8%BD%AF%E8%B7%AF%E7%94%B1%E6%8A%98%E8%85%BE%E8%AE%B0/"/>
    <id>http://example.com/2021/02/21/%E8%BD%AF%E8%B7%AF%E7%94%B1%E6%8A%98%E8%85%BE%E8%AE%B0/</id>
    <published>2021-02-20T22:55:18.000Z</published>
    <updated>2021-02-20T23:44:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>从前总是听说过软路由，但是也一直没有去详细了解这么个东西，去年秋季开学机缘巧合下通过一个新同学认识了软路由这么个东西。</p><p>软路由的功能不少，但是对我来说最重要的莫过于全局魔法上网了，在此之前我所有的设备都是通过客户端上网的。客户端翻墙有这么几个弊端。</p><ol><li>有部分设备没发装翻墙客户端或者非常之麻烦，比如电视盒子。</li><li>客户端的代理层级不够高，导致不支持sock5的应用没法利用梯子，比如npm安装包的时候，找国内的镜像源又是一件麻烦事，又或者大部分游戏，玩Minecraft连接不上Mojang的验证服务器也是常有的事。</li><li>节约客户端用于解码加密数据的算力，虽然个人并没有明显的感受到这一点的影响，但是对于一些算力比较弱的设备可能比较重要。</li></ol><p>在学校里因为要对校园网进行桥接来让我所有的设备能够联网，而不是每个设备每次都要单独登录，更何况还有设备数量限制。一开始是闲鱼买的一台伊拉克成色的小米路由器mini，只要30块钱，让大佬同学帮我刷了老毛子固件，用了一阵子，至少在本职工作——桥接校园网这件事上做的还是不错的。</p><h1 id="咕"><a href="#咕" class="headerlink" title="咕"></a>咕</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;从前总是听说过软路由，但是也一直没有去详细了解这么个东西，去年秋季开学机缘巧合下通过一个新同学认识了软路由这么个东西。&lt;/p&gt;
&lt;p&gt;软路由的功能不少，但是对我来说最重要的莫过于全局魔法上网了，在此之前我所有的设备都是通过客户端上网的。客户端翻墙有这么几个弊端。&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hexo + Github page笔记</title>
    <link href="http://example.com/2021/02/20/%E7%AC%AC%E4%B8%89%E6%AC%A1%E6%8A%98%E8%85%BEBlog/"/>
    <id>http://example.com/2021/02/20/%E7%AC%AC%E4%B8%89%E6%AC%A1%E6%8A%98%E8%85%BEBlog/</id>
    <published>2021-02-19T22:00:00.000Z</published>
    <updated>2021-05-18T10:03:16.824Z</updated>
    
    <content type="html"><![CDATA[<p> 其实这是第三次折腾Blog了，这次使用的是Github page + Hexo的组合，只要求能跑起来就好(捂脸)。</p><p>这里记录一下安装的步骤好了，主要目的是防止自己之后又忘记，环境是MacOS Catalina 10.15.7。</p><h2 id="环境检查"><a href="#环境检查" class="headerlink" title="环境检查"></a>环境检查</h2><p>首先检查一下需要的Node和Git,如果正常显示版本就没有问题啦。</p><p><code>git version</code></p><p><code>node -v</code></p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>执行如下命令安装hexo。然后要输入一下密码，似乎MacOS上所有npm命令都需要sudo。</p><p>ps:我是在路由器可以全局访问国际互联网的环境下，如果访问困难可能需要使用大陆境内的镜像。</p><p><code>sudo npm install -g hexo-cli</code></p><p>在想要存放博客内容的地方创建一个hexo的根目录，这里取名myBlog,实际想怎么取都行。</p><p><code>hexo init myBlog</code></p><p>cd指令进入刚刚创建的myBlog文件夹，之后几乎所有的操作都要在这个目录下进行，在其他目录可能会出问题。</p><p><code>cd myBlog</code></p><p>安装Hexo相关组建</p><p><code>npm install</code></p><h2 id="尝试在本地运行"><a href="#尝试在本地运行" class="headerlink" title="尝试在本地运行"></a>尝试在本地运行</h2><p>执行<br><code>hexo s</code></p><p>如果没有问题现在应该可以通过浏览器 <a class="link"   href="http://localhost:4000/" >http://localhost:4000/<i class="fas fa-external-link-alt"></i></a> 访问初始demo页面了。</p><p>一些常用的指令</p><p>创建新的文章<br><code>$ hexo new [layout] &lt;title&gt;</code></p><p>完成部署<br><code>$ hexo d -g</code></p><p>清除缓存<br><code>$ hexo clean</code><br><code> </code></p><p>WIP</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; 其实这是第三次折腾Blog了，这次使用的是Github page + Hexo的组合，只要求能跑起来就好(捂脸)。&lt;/p&gt;
&lt;p&gt;这里记录一下安装的步骤好了，主要目的是防止自己之后又忘记，环境是MacOS Catalina 10.15.7。&lt;/p&gt;
&lt;h2 id=&quot;环境检</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>MySQL笔记</title>
    <link href="http://example.com/2020/12/28/MySQL%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2020/12/28/MySQL%E7%AC%94%E8%AE%B0/</id>
    <published>2020-12-28T07:07:53.000Z</published>
    <updated>2021-11-28T07:11:42.191Z</updated>
    
    <content type="html"><![CDATA[<p>一份给自己看的MySQL指令笔记～</p><h2 id="User"><a href="#User" class="headerlink" title="User"></a>User</h2><h3 id="Create-user"><a href="#Create-user" class="headerlink" title="Create user"></a>Create user</h3><p>Create a new user and set the passwor.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;password&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="Delete-user"><a href="#Delete-user" class="headerlink" title="Delete user"></a>Delete user</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">USER</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="Change-password"><a href="#Change-password" class="headerlink" title="Change password"></a>Change password</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;password&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="Privileges"><a href="#Privileges" class="headerlink" title="Privileges"></a>Privileges</h3><h4 id="GRANT"><a href="#GRANT" class="headerlink" title="GRANT"></a>GRANT</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> type_of_permission <span class="keyword">ON</span> database_name.table_name <span class="keyword">TO</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br></pre></td></tr></table></figure><h5 id="Example"><a href="#Example" class="headerlink" title="Example:"></a>Example:</h5><p>Allow newuser do anything in any tables of any databases, first * means database, the second * means tables, as same as root.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> <span class="operator">*</span> . <span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;newuser&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="REVOKE"><a href="#REVOKE" class="headerlink" title="REVOKE"></a>REVOKE</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">REVOKE</span> type_of_permission <span class="keyword">ON</span> database_name.table_name <span class="keyword">FROM</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="Show-grants"><a href="#Show-grants" class="headerlink" title="Show grants"></a>Show grants</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> GRANTS <span class="keyword">FOR</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br></pre></td></tr></table></figure><h5 id="Type-of-permissions"><a href="#Type-of-permissions" class="headerlink" title="Type of permissions"></a>Type of permissions</h5><ul><li>ALL PRIVILEGES- as we saw previously, this would allow a MySQL user full access to a designated database (or if no database is selected, global access across the system)</li><li>CREATE- allows them to create new tables or databases</li><li>DROP- allows them to them to delete tables or databases</li><li>DELETE- allows them to delete rows from tables</li><li>INSERT- allows them to insert rows into tables</li><li>SELECT- allows them to use the <code>SELECT</code> command to read through databases</li><li>UPDATE- allow them to update table rows</li><li>GRANT OPTION- allows them to grant or remove other users’ privileges</li></ul><h4 id="FLUSH"><a href="#FLUSH" class="headerlink" title="FLUSH"></a>FLUSH</h4><p>Make the grant effect.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FLUSH PRIVILEGES</span><br></pre></td></tr></table></figure><h2 id="Database"><a href="#Database" class="headerlink" title="Database"></a>Database</h2><h3 id="Create-database"><a href="#Create-database" class="headerlink" title="Create database"></a>Create database</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">CREATE &#123;DATABASE | SCHEMA&#125; [IF NOT EXISTS] db_name</span><br><span class="line">    [create_option] ...</span><br><span class="line"></span><br><span class="line">create_option: [DEFAULT] &#123;</span><br><span class="line">    <span class="type">CHARACTER</span> <span class="keyword">SET</span> [<span class="operator">=</span>] charset_name</span><br><span class="line">  <span class="operator">|</span> <span class="keyword">COLLATE</span> [<span class="operator">=</span>] collation_name</span><br><span class="line">  | ENCRYPTION [=] &#123;&#x27;Y&#x27; | &#x27;N&#x27;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Example-1"><a href="#Example-1" class="headerlink" title="Example:"></a>Example:</h5><ul><li>Create a database.</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> test_data_base;</span><br></pre></td></tr></table></figure><ul><li>Create a database with utf8 encoding.</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE db_name <span class="type">CHARACTER</span> <span class="keyword">SET</span> UTF8mb4 <span class="keyword">COLLATE</span> utf8mb4_bin</span><br></pre></td></tr></table></figure><h4 id="Drop-database"><a href="#Drop-database" class="headerlink" title="Drop database"></a>Drop database</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DROP &#123;DATABASE | SCHEMA&#125; [IF EXISTS] db_name</span><br></pre></td></tr></table></figure><h3 id="Alter-database"><a href="#Alter-database" class="headerlink" title="Alter database"></a>Alter database</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ALTER &#123;DATABASE | SCHEMA&#125; [db_name]</span><br><span class="line">    alter_option ...</span><br><span class="line"></span><br><span class="line">alter_option: &#123;</span><br><span class="line">    [<span class="keyword">DEFAULT</span>] <span class="type">CHARACTER</span> <span class="keyword">SET</span> [<span class="operator">=</span>] charset_name</span><br><span class="line">  <span class="operator">|</span> [<span class="keyword">DEFAULT</span>] <span class="keyword">COLLATE</span> [<span class="operator">=</span>] collation_name</span><br><span class="line">  | [DEFAULT] ENCRYPTION [=] &#123;&#x27;Y&#x27; | &#x27;N&#x27;&#125;</span><br><span class="line">  | READ ONLY [=] &#123;DEFAULT | 0 | 1&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Example-2"><a href="#Example-2" class="headerlink" title="Example:"></a>Example:</h5><p>Alter a database use UTF-8.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> DATABASE db_name <span class="type">CHARACTER</span> <span class="keyword">SET</span> UTF8mb4 <span class="keyword">COLLATE</span> utf8mb4_bin</span><br></pre></td></tr></table></figure><p>Show databases.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> DATATASES</span><br></pre></td></tr></table></figure><h3 id="Use-database"><a href="#Use-database" class="headerlink" title="Use database"></a>Use database</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">USE db_name</span><br></pre></td></tr></table></figure><h2 id="Table"><a href="#Table" class="headerlink" title="Table"></a>Table</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一份给自己看的MySQL指令笔记～&lt;/p&gt;
&lt;h2 id=&quot;User&quot;&gt;&lt;a href=&quot;#User&quot; class=&quot;headerlink&quot; title=&quot;User&quot;&gt;&lt;/a&gt;User&lt;/h2&gt;&lt;h3 id=&quot;Create-user&quot;&gt;&lt;a href=&quot;#Create-us</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>光盘备份计划</title>
    <link href="http://example.com/2020/07/20/%E5%85%89%E7%9B%98%E5%A4%87%E4%BB%BD%E8%AE%A1%E5%88%92/"/>
    <id>http://example.com/2020/07/20/%E5%85%89%E7%9B%98%E5%A4%87%E4%BB%BD%E8%AE%A1%E5%88%92/</id>
    <published>2020-07-20T02:34:51.000Z</published>
    <updated>2021-02-20T02:38:47.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在数月之前，SSD发生了一次毁灭性的故障，导致了许多曾在Minecraft服务器（毛线）里的截图丢失，这些截图的丢人令我感到非常难受，毕竟算是曾经几乎一整年的回忆（当时什么都没有干完全沉迷毛线）。仔细回想这也不是第一次因为电脑或者手机丢失/故障而失去一些重要数据了，于是打算折腾一个数据冷备份的计划。<br>Google了一下主流存储介质的寿命，看起来光盘的寿命似乎有10年左右，不过网上也很多人说自己在家用刻录机刻录的光盘的寿命要比批量压制的光盘短很多，不过个人当然不可能去压制光盘，当年父母结婚时候的刻录盘似乎现在也可以读取，感觉光盘的可靠性似乎不错。<br>如果打算光盘备份的话，预算充足蓝光盘无疑是最好的选择，每片25G的廉价蓝光盘大概2元左右，但是蓝光刻录机的价格成功阻止了我，几乎全都在500+。考虑到现在需要备份的资料不是特别多，准备用单盘4.7G的DVD盘备份，因为还在上学，对便携性有一点点要求，于是咸鱼收了一台苹果的SuperDrive，事实上如果不要求便携性，一台二手的DVD刻录光驱+SATA转USB线，大概只要40r不到就能拿下。</p><h2 id="咕"><a href="#咕" class="headerlink" title="咕"></a>咕</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在数月之前，SSD发生了一次毁灭性的故障，导致了许多曾在Minecraft服务器（毛线）里的截图丢失，这些截图的丢人令我感到非常难受，毕竟算</summary>
      
    
    
    
    
  </entry>
  
</feed>
